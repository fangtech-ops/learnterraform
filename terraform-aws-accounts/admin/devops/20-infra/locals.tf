data "aws_caller_identity" "current" {}

locals {
  account_id = data.aws_caller_identity.current.account_id
}

# The outputs `account_id` and `caller_arn` defined below are unlikely going to be referenced by
# any other modules (and probably should not be, either). The main purpose of having them is for
# improving the readability. More specicially, when the `terraform (plan|apply)` commands are run
# either manually or by atlantis, we will be able to see in which context the change is going to
# be or has been applied.
#
output "account_id" {
  value = local.account_id
}

output "caller_arn" {
  # The full ARN is a non-stable value that would look like this:
  #    "arn:aws:sts::342812538696:assumed-role/NarvarTerraformRole/1637513644931287000"
  # where the non-stable session name "1637513644931287000" is appended at the end. See:
  #     https://aws.amazon.com/blogs/security/easily-control-naming-individual-iam-role-sessions/
  #
  # That session name is generated by terraform, and terraform generates a different value each time when 
  # we run 'terraform [plan | apply]' (I wish terraform had generated a fixed value such as "terraform" or at least
  # a more meaningful random value such as "terraform-1637513644931287000".)
  #
  # Had this output var been the entire ARN (including the sesssion name), subsequent 'terraform [plan|apply]' will always think
  # that this output var has changed (because the session name from a previous 'terraform [plan|apply]' will never equal the
  # session name from a subsequent 'terraform [plan|apply]'.)
  #
  # So, we use replace() to chop off the session name so that the remaining portion is stable, i.e., the returned value is:
  #     "arn:aws:sts::342812538696:assumed-role/NarvarTerraformRole"
  # This way, subsequent 'terraform [plan|apply]' will result in "do nothing".
  #
  # This regex means "a forward slash followed by digits till the end of line", e.g., a suffix like "/1637513644931287000"
  value = replace(data.aws_caller_identity.current.arn, "//\\d+$/", "")
}
