--- 
apiVersion: eksctl.io/v1alpha5
kind: ClusterConfig

metadata:
  name: cluster-3
  region: us-west-2

vpc:
  id: "vpc-0f1864c84ab49484e"  # (optional, must match VPC ID used for each subnet below)
  cidr: "10.10.0.0/16"       # (optional, must match CIDR used by the given VPC)
  subnets:
    # must provide 'private' and/or 'public' subnets by availibility zone as shown
    public:
      us-west-2a:
        id: "subnet-01a0aa32c8c9b4fae"
        cidr: "10.10.10.0/24" # (optional, must match CIDR used by the given subnet)
      us-west-2b:
        id: "subnet-0d327f036acd96688"
        cidr: "10.10.11.0/24"
      us-west-2c:
        id: "subnet-00831078272e7af08"
        cidr: "10.10.12.0/24"



ManagednodeGroups:
  - name: managed-ng-public
  
    instanceType: t3.large
    minSize: 3
    desiredCapacity: 3
    maxSize: 4
    availabilityZones: ["us-west-2a", "us-west-2b","us-west-2c"]
    volumeSize: 20
    securityGroups:
      attachIDs: ["sg-1", "sg-2", "sg-2"]
    ssh:
      allow: true
      publicKeyPath: /Users/charles.lee/.ssh/id_rsa.pub
      # new feature for restricting SSH access to certain AWS security group IDs
      sourceSecurityGroupIds: ["sg-09efb17d2d9913811"]
    labels: {role: worker}
    tags:
      nodegroup-role: worker
    iam:
      withAddonPolicies:
        externalDNS: true
        certManager: true

  - name: managed-ng-private
    instanceType: m5.large
    # launch nodegroup in private subnets
    privateNetworking: true

